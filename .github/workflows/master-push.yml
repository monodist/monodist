name: Node.js (push to master)

on:
  push:
    branches:
      - master

env:
  PNPM_VERSION: 5.5.12

jobs:
  changeset:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    steps:
      # Begin boilerplate
      - uses: actions/checkout@v2
      - name: use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: cache pnpm-store
        id: cache-pnpm
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ matrix.node-version }}-pnpm-store
      - run: curl -L https://unpkg.com/@pnpm/self-installer | node
      - name: enable husky install
        run: "echo $(cat .huskyrc | jq '. + { skipCI: false }') > .huskyrc"
      - run: pnpm install
      # End boilerplate

      - name: write GitHub NPM registry authToken
        run: |
          cat << EOF > "$HOME/.npmrc"
          //npm.pkg.github.com/:_authToken=$GITHUB_TOKEN
          EOF
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # This will not trigger the `master-push` workflow to re-run as it uses
      # the GITHUB_TOKEN. To trigger a new workflow, use a personal access
      # token as described here:
      # https://docs.github.com/en/actions/reference/events-that-trigger-workflows#triggering-new-workflows-using-a-personal-access-token
      - name: changeset version and publish, then git push
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          pnpx changeset version
          pnpx install && git commit -am "updating lockfile"
          git commit -am "$(git log -1 --skip=1 --pretty=%B | xargs && git reset --soft HEAD~2)"
          pnpx changeset publish
          git push
          git push --follow-tags

  build-test-lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]

    steps:
      # Begin boilerplate
      - uses: actions/checkout@v2
      - name: use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: cache pnpm-store
        id: cache-pnpm
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ matrix.node-version }}-pnpm-store
      - run: curl -L https://unpkg.com/@pnpm/self-installer | node
      - run: pnpm install
      # End boilerplate

      - run: pnpm prettier
      - run: pnpm build
      - run: pnpm test
      - run: pnpm lint
      - run: pnpm depcheck
